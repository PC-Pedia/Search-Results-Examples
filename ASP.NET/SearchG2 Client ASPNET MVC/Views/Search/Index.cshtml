@using System.Web.UI.WebControls
@using CrownPeak.SearchG2.Client.Helpers
@model CrownPeak.SearchG2.Client.Models.Query

@{
	ViewBag.Title = "Index";
}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<style type="text/css">
	.ui-helper-hidden-accessible { position: absolute; left: -9999px; }
	.ui-autocomplete-term { font-weight: bold; }
</style>

@using (Html.BeginForm("Search", "Search", FormMethod.Post))
{ 
	<div>
		@Html.HiddenFor(model => model.Page, new { value = "1" })
		@*See http://dzapart.blogspot.co.uk/2013/04/auto-complete-controll-with-aspnet-mvc.html *@
		@Html.AutocompleteFor(model => model.QueryText, Url.Action("Autocomplete", "Autocomplete"), false, "Search")
		<input type="submit" value="Search" />
	</div>
	
	<script type="text/javascript">

		// See http://stackoverflow.com/questions/3344804/how-to-make-matched-text-bold-with-jquery-ui-autocomplete
		var TERM_TEMPLATE = "<span class='ui-autocomplete-term'>%s</span>";

		$(document).ready(function () {
			CreateAutocomplete();
		});

		function CreateAutocomplete() {
			var inputsToProcess = $("[data-autocomplete]").each(function (index, element) {
				var requestUrl = $(element).attr("data-action");

				$(element).autocomplete({
					minLength: 2,
					source: function(request, response) {
						$.ajax({
							url: requestUrl,
							dataType: "json",
							data: { query: request.term },
							messages: {
								noResults: "",
								results: ""
							},
							success: function(data) {
								response($.map(data, function(item) {
									return {
										label: item.Label,
										value: item.Label,
										realValue: item.Value
									};
								}));
							},
						});
					},
					open: function(e,ui) {
						var acData = $(this).data('uiAutocomplete'),
								styledTerm = TERM_TEMPLATE.replace('%s', acData.term);
						
						acData
								.menu
								.element
								.find('a')
								.each(function() {
									var me = $(this);
									me.html( me.text().replace(acData.term, styledTerm) );
								});
					},
					select: function(event, ui) {
						var hiddenFieldName = $(this).attr("data-value-name");
						$("#" + hiddenFieldName).val(ui.item.realValue);
					}
				});
			});
		}
	</script>
}